<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JsonFx.Mvc</name>
    </assembly>
    <members>
        <member name="T:JsonFx.Mvc.DataModelBinder">
            <summary>
            Deserializes data according to a specified format
            </summary>
        </member>
        <member name="M:JsonFx.Mvc.DataModelBinder.#ctor(JsonFx.Json.IDataReaderProvider)">
            <summary>
            Ctor
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:JsonFx.Mvc.DataModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            Reads the request body using the supplied IDataReader
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <returns></returns>
        </member>
        <member name="P:JsonFx.Mvc.DataModelBinder.DefaultBinder">
            <summary>
            Gets and sets the binder used if the provider cannot find a matching IDataReaders 
            </summary>
        </member>
        <member name="P:JsonFx.Mvc.DataModelBinder.Provider">
            <summary>
            Gets the provider which finds the matching IDataReader
            </summary>
        </member>
        <member name="M:JsonFx.Mvc.Jbst.Bind(JsonFx.Json.EcmaScriptIdentifier,JsonFx.Json.EcmaScriptIdentifier,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Bind the JBST to the provided data.
            </summary>
            <param name="helper"></param>
            <param name="jbst"></param>
            <param name="data">named data to bind</param>
            <param name="dataItems">collection of data to emit</param>
            <returns></returns>
        </member>
        <member name="M:JsonFx.Mvc.Jbst.Bind(JsonFx.Json.EcmaScriptIdentifier,System.Object)">
            <summary>
            Bind the JBST to the provided data.
            </summary>
            <param name="helper"></param>
            <param name="jbst"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:JsonFx.Mvc.Jbst.Bind(JsonFx.Json.EcmaScriptIdentifier,System.Object,System.Int32,System.Int32)">
            <summary>
            Bind the JBST to the provided data.
            </summary>
            <param name="helper"></param>
            <param name="jbst"></param>
            <param name="data"></param>
            <param name="index"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:JsonFx.Mvc.Jbst.ScriptData(System.String,System.Object)">
            <summary>
            Emit the provided data as JavaScript variables.
            </summary>
            <param name="helper"></param>
            <param name="name"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:JsonFx.Mvc.Jbst.ScriptData(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Emit the provided data as JavaScript variables.
            </summary>
            <param name="helper"></param>
            <param name="name"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:JsonFx.Mvc.DataResult">
            <summary>
            Serializes data according to a specified format
            </summary>
        </member>
        <member name="M:JsonFx.Mvc.DataResult.#ctor(JsonFx.Json.IDataWriterProvider)">
            <summary>
            Ctor
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:JsonFx.Mvc.DataResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
            <summary>
            Serializes the data using the specified IDataWriter
            </summary>
            <param name="context">ControllerContext</param>
        </member>
        <member name="M:JsonFx.Mvc.DataResult.ScrubFilename(System.String,System.String)">
            <summary>
            Produces a header friendly name which ends in the given extension
            </summary>
            <param name="url"></param>
            <param name="ext"></param>
            <returns></returns>
        </member>
        <member name="P:JsonFx.Mvc.DataResult.Data">
            <summary>
            Gets and sets the data to be serialized
            </summary>
        </member>
        <member name="P:JsonFx.Mvc.DataResult.HttpStatusCode">
            <summary>
            Gets and sets the HTTP status code of the response
            </summary>
        </member>
        <member name="P:JsonFx.Mvc.DataResult.Filename">
            <summary>
            Gets and sets a filename hint
            </summary>
            <remarks>
            Used in Content-Disposition header
            </remarks>
        </member>
        <member name="P:JsonFx.Mvc.DataResult.DataWriterProvider">
            <summary>
            Gets the underlying IDataWriter
            </summary>
        </member>
        <member name="T:JsonFx.Mvc.LiteController">
            <summary>
            A light-weight Controller base for basis of a Layer Supertype.
            Encourages IoC and reduces default clutter.
            </summary>
        </member>
        <member name="M:JsonFx.Mvc.LiteController.DataResult">
            <summary>
            Override with IoC container resolution of DataResult
            </summary>
            <returns></returns>
        </member>
        <member name="P:JsonFx.Mvc.LiteController.ActionInvoker">
            <summary>
            Override with IoC container resolution of IActionInvoker
            </summary>
            <returns></returns>
        </member>
        <member name="T:JsonFx.Mvc.CleanHeadersModule">
            <summary>
            Customizes the HTTP Headers to remove default cruft and add any custom headers
            </summary>
        </member>
        <member name="M:JsonFx.Mvc.CleanHeadersModule.BuildServerHeader(System.Reflection.Assembly)">
            <summary>
            Defaults to "{Name}/{Version}" of Assembly
            </summary>
            <returns></returns>
        </member>
        <member name="P:JsonFx.Mvc.CleanHeadersModule.Headers">
            <summary>
            Gets a collection of headers to add to every request
            </summary>
        </member>
    </members>
</doc>
